/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.13
 * Generated at: 2023-11-28 02:52:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import models.modelo_usuario;
import java.util.List;
import java.util.ArrayList;
import jakarta.servlet.http.HttpSession;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.RequestDispatcher;

public final class mostrar_005fusuarios_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("jakarta.servlet.http.HttpSession");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("jakarta.servlet.RequestDispatcher");
    _jspx_imports_classes.add("jakarta.servlet.http.HttpServletRequest");
    _jspx_imports_classes.add("models.modelo_usuario");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 

    HttpSession sesion = request.getSession();

    if (sesion.getAttribute("usuario") != null) {   


      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"es\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>USUARIOS</title>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\" crossorigin=\"anonymous\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");


    modelo_usuario modelo = new modelo_usuario();

    List<modelo_usuario> users = modelo.mostrar_usuarios();

    
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <!--modificar-->\r\n");
      out.write("    <button><a href=\"views/registro_usuario.jsp\">Registrar usuario</a></button> \r\n");
      out.write("\r\n");
      out.write("    <button><a href=\"views/registro_producto.jsp\">Registrar producto</a></button> \r\n");
      out.write("\r\n");
      out.write("    <button><a href=\"views/registro_categoria.jsp\">Registrar categoria</a></button> \r\n");
      out.write("\r\n");
      out.write("    <button><a href=\"views/venta.jsp\">Registrar venta</a></button> \r\n");
      out.write("\r\n");
      out.write("    <button><a href=\"views/entrada.jsp\">Registrar entada</a></button> \r\n");
      out.write("\r\n");
      out.write("    <form action=\"/sapphire_inventory/mostrar_usuarios_servlet\" method=\"GET\">\r\n");
      out.write("    <input value=\"usuarios\" name =\"usuarios\" type = \"submit\">\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("    <form action=\"/sapphire_inventory/mostrar_categorias_servlet\" method=\"post\">\r\n");
      out.write("    <input value=\"productos\" name =\"productos\" type = \"submit\">\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("    <form action=\"/sapphire_inventory/cerrar_sesion_servlet\" method=\"post\">\r\n");
      out.write("        <input value=\"cerrar sesion\" name =\"cerrar_sesion\" type = \"submit\">\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("    <h1>USUARIOS</h1>\r\n");
      out.write("\r\n");
      out.write("    <br>\r\n");
      out.write("\r\n");
      out.write("    <table border=\"1\">\r\n");
      out.write("\r\n");
      out.write("        <thead>\r\n");
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("\r\n");
      out.write("                <th>Id</th>\r\n");
      out.write("                <th>Nombres</th>\r\n");
      out.write("                <th>Apellidos</th>\r\n");
      out.write("                <th>Tipo de Documento</th>\r\n");
      out.write("                <th>Número de Documento</th>\r\n");
      out.write("                <th>Teléfono</th>\r\n");
      out.write("                <th>Rol</th>\r\n");
      out.write("                <th>Usuario</th>\r\n");
      out.write("                <th>Contraseña</th>\r\n");
      out.write("                <th>Acciones</th>\r\n");
      out.write("\r\n");
      out.write("            </tr>\r\n");
      out.write("\r\n");
      out.write("        </thead>\r\n");
      out.write("\r\n");
      out.write("        <tbody>\r\n");
      out.write("\r\n");
      out.write("            ");
 for (modelo_usuario user : users) { 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("\r\n");
      out.write("    <td>");
      out.print( user.getId_usuario() );
      out.write("</td>\r\n");
      out.write("    <td>");
      out.print( user.getNombres_usuario() );
      out.write("</td>\r\n");
      out.write("    <td>");
      out.print( user.getApellidos_usuario() );
      out.write("</td>\r\n");
      out.write("    <td>");
      out.print( user.getTipo_documento() );
      out.write("</td>\r\n");
      out.write("    <td>");
      out.print( user.getNumero_documento_usuario() );
      out.write("</td>\r\n");
      out.write("    <td>");
      out.print( user.getTelefono_usuario() );
      out.write("</td>\r\n");
      out.write("    <td>");
      out.print( user.getRol_usuario() );
      out.write("</td>\r\n");
      out.write("    <td>");
      out.print( user.getUsuario() );
      out.write("</td>\r\n");
      out.write("    <td>");
      out.print( user.getContraseña() );
      out.write("</td>\r\n");
      out.write("\r\n");
      out.write("    <td>\r\n");
      out.write("        <form action=\"/sapphire_inventory/actualizar_usuario_servlet\" method=\"GET\">\r\n");
      out.write("            <input type=\"hidden\" name=\"usuario_id_actualizar\" value=\"");
      out.print( user.getId_usuario() );
      out.write("\">\r\n");
      out.write("            <input type=\"submit\" value=\"Actualizar\">\r\n");
      out.write("        </form>\r\n");
      out.write("        <form action=\"/sapphire_inventory/eliminar_usuario_servlet\" method=\"GET\">\r\n");
      out.write("            <input type=\"hidden\" name=\"usuario_id_eliminar\" value=\"");
      out.print( user.getId_usuario() );
      out.write("\">\r\n");
      out.write("            <input type=\"submit\" value=\"Borrar\">\r\n");
      out.write("        </form>\r\n");
      out.write("    </td>\r\n");
      out.write("</tr>\r\n");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        </tbody>\r\n");
      out.write("    </table>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js\" integrity=\"sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js\" integrity=\"sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
 

} else {

    RequestDispatcher redireccion = request.getRequestDispatcher("error_sesion.jsp");
    redireccion.forward(request, response);

    }
    
    
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
